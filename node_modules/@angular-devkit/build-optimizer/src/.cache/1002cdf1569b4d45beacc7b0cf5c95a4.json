{"remainingRequest":"/home/travis/build/fossasia/susper.com/repo/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/travis/build/fossasia/susper.com/repo/node_modules/ng2-bs3-modal/components/modal-instance.js","dependencies":[{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/ng2-bs3-modal/components/modal-instance.js","mtime":1475253451000},{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nvar Observable_1 = require('rxjs/Observable');\nrequire('rxjs/add/operator/map');\nrequire('rxjs/add/observable/fromEvent');\nvar ModalInstance = /*@__PURE__*/ (function () {\n    function ModalInstance(element) {\n        this.element = element;\n        this.suffix = '.ng2-bs3-modal';\n        this.shownEventName = 'shown.bs.modal' + this.suffix;\n        this.hiddenEventName = 'hidden.bs.modal' + this.suffix;\n        this.visible = false;\n        this.init();\n    }\n    ModalInstance.prototype.open = function () {\n        return this.show();\n    };\n    ModalInstance.prototype.close = function () {\n        this.result = ModalResult.Close;\n        return this.hide();\n    };\n    ModalInstance.prototype.dismiss = function () {\n        this.result = ModalResult.Dismiss;\n        return this.hide();\n    };\n    ModalInstance.prototype.destroy = function () {\n        var _this = this;\n        return this.hide().then(function () {\n            if (_this.$modal) {\n                _this.$modal.data('bs.modal', null);\n                _this.$modal.remove();\n            }\n        });\n    };\n    ModalInstance.prototype.show = function () {\n        var promise = toPromise(this.shown);\n        this.resetData();\n        this.$modal.modal();\n        return promise;\n    };\n    ModalInstance.prototype.hide = function () {\n        if (this.$modal && this.visible) {\n            var promise = toPromise(this.hidden);\n            this.$modal.modal('hide');\n            return promise;\n        }\n        return Promise.resolve(this.result);\n    };\n    ModalInstance.prototype.init = function () {\n        var _this = this;\n        this.$modal = jQuery(this.element.nativeElement);\n        this.$modal.appendTo('body');\n        this.shown = Observable_1.Observable.fromEvent(this.$modal, this.shownEventName)\n            .map(function () {\n            _this.visible = true;\n        });\n        this.hidden = Observable_1.Observable.fromEvent(this.$modal, this.hiddenEventName)\n            .map(function () {\n            var result = (!_this.result || _this.result === ModalResult.None)\n                ? ModalResult.Dismiss : _this.result;\n            _this.result = ModalResult.None;\n            _this.visible = false;\n            return result;\n        });\n    };\n    ModalInstance.prototype.resetData = function () {\n        this.$modal.removeData();\n        this.$modal.data('backdrop', booleanOrValue(this.$modal.attr('data-backdrop')));\n        this.$modal.data('keyboard', booleanOrValue(this.$modal.attr('data-keyboard')));\n    };\n    return ModalInstance;\n}());\nexports.ModalInstance = ModalInstance;\nfunction booleanOrValue(value) {\n    if (value === 'true')\n        return true;\n    else if (value === 'false')\n        return false;\n    return value;\n}\nfunction toPromise(observable) {\n    return new Promise(function (resolve, reject) {\n        observable.subscribe(function (next) {\n            resolve(next);\n        });\n    });\n}\n(function (ModalResult) {\n    ModalResult[ModalResult[\"None\"] = 0] = \"None\";\n    ModalResult[ModalResult[\"Close\"] = 1] = \"Close\";\n    ModalResult[ModalResult[\"Dismiss\"] = 2] = \"Dismiss\";\n})(exports.ModalResult || (exports.ModalResult = {}));\nvar ModalResult = exports.ModalResult;\n",null]}