{"remainingRequest":"/home/travis/build/fossasia/susper.com/repo/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/travis/build/fossasia/susper.com/repo/node_modules/@ngrx/store-devtools/src/actions.js","dependencies":[{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/@ngrx/store-devtools/src/actions.js","mtime":1490359185000},{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["export var ActionTypes = {\n    PERFORM_ACTION: 'PERFORM_ACTION',\n    RESET: 'RESET',\n    ROLLBACK: 'ROLLBACK',\n    COMMIT: 'COMMIT',\n    SWEEP: 'SWEEP',\n    TOGGLE_ACTION: 'TOGGLE_ACTION',\n    SET_ACTIONS_ACTIVE: 'SET_ACTIONS_ACTIVE',\n    JUMP_TO_STATE: 'JUMP_TO_STATE',\n    IMPORT_STATE: 'IMPORT_STATE'\n};\n/**\n* Action creators to change the History state.\n*/\nexport var StoreDevtoolActions = {\n    performAction: function (action) {\n        if (typeof action.type === 'undefined') {\n            throw new Error('Actions may not have an undefined \"type\" property. ' +\n                'Have you misspelled a constant?');\n        }\n        return { type: ActionTypes.PERFORM_ACTION, action: action, timestamp: Date.now() };\n    },\n    reset: function () {\n        return { type: ActionTypes.RESET, timestamp: Date.now() };\n    },\n    rollback: function () {\n        return { type: ActionTypes.ROLLBACK, timestamp: Date.now() };\n    },\n    commit: function () {\n        return { type: ActionTypes.COMMIT, timestamp: Date.now() };\n    },\n    sweep: function () {\n        return { type: ActionTypes.SWEEP };\n    },\n    toggleAction: function (id) {\n        return { type: ActionTypes.TOGGLE_ACTION, id: id };\n    },\n    setActionsActive: function (start, end, active) {\n        if (active === void 0) { active = true; }\n        return { type: ActionTypes.SET_ACTIONS_ACTIVE, start: start, end: end, active: active };\n    },\n    jumpToState: function (index) {\n        return { type: ActionTypes.JUMP_TO_STATE, index: index };\n    },\n    importState: function (nextLiftedState) {\n        return { type: ActionTypes.IMPORT_STATE, nextLiftedState: nextLiftedState };\n    }\n};\n//# sourceMappingURL=actions.js.map",null]}