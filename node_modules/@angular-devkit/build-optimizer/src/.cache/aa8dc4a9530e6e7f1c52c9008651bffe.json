{"remainingRequest":"/home/travis/build/fossasia/susper.com/repo/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/travis/build/fossasia/susper.com/repo/node_modules/ngrx-store-freeze/dist/index.js","dependencies":[{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/ngrx-store-freeze/dist/index.js","mtime":1487323273000},{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/travis/build/fossasia/susper.com/repo/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nvar deepFreeze = require(\"deep-freeze-strict\");\n/**\n * Middleware that prevents state from being mutated anywhere in the app.\n */\nfunction storeFreeze(reducer) {\n    return function (state, action) {\n        if (state === void 0) { state = {}; }\n        deepFreeze(state);\n        // guard against trying to freeze null or undefined types\n        if (action.payload) {\n            deepFreeze(action.payload);\n        }\n        var nextState = reducer(state, action);\n        deepFreeze(nextState);\n        return nextState;\n    };\n}\nexports.storeFreeze = storeFreeze;\n",null]}